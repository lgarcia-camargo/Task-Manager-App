{"version":3,"sources":["components/Button.js","components/Header.js","components/Footer.js","components/Task.js","components/Tasks.js","components/AddTask.js","components/About.js","App.js","reportWebVitals.js","index.js"],"names":["Button","color","text","onClick","style","backgroundColor","className","defaultProps","Header","title","onAdd","showAdd","location","useLocation","pathname","Footer","to","Task","task","onDelete","onToggle","reminder","onDoubleClick","id","cursor","day","Tasks","tasks","map","AddTask","useState","setText","setDay","setReminder","onSubmit","e","preventDefault","alert","type","placeholder","value","onChange","target","checked","currentTarget","About","App","showAddTask","setShowAddTask","setTasks","useEffect","a","fetchTasks","tasksFromServer","getTasks","fetchTask","fetch","res","json","data","addTask","method","headers","body","JSON","stringify","deleteTask","filter","toggleReminder","taskToToggle","updTask","path","exact","render","props","length","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.18e1dafe.chunk.js","sourcesContent":["import PropTypes from 'prop-types'\n\n\nconst Button = ({color, text, onClick}) => {\n\n    return <button onClick={onClick} style={{backgroundColor: color}} \n    className='btn'>{text}</button>\n}\n\nButton.defaultProps = {\n    color: 'steelblue'\n}\n\nButton.propTypes = {\n    text: PropTypes.string,\n    color: PropTypes.string,\n    onClick: PropTypes.func,\n}\n\nexport default Button\n","import PropTypes from 'prop-types'\nimport Button from './Button'\nimport { useLocation } from 'react-router-dom'\n\nconst Header = ({title, onAdd, showAdd}) => {\n    const location = useLocation()\n\n\n    return (\n        <header className = 'header'>\n            <h1>{title}</h1>\n            {location.pathname === '/' && <Button \n            color={showAdd ? 'red' : 'green'} \n            text={showAdd ? 'Close' : 'Add'} \n            onClick={onAdd}/>}\n        </header>\n    )\n}\n\nHeader.defaultProps = {\n    title: 'Task Tracker',\n}\n\nHeader.propTypes= {\n    title: PropTypes.string,\n}\n\n// const headingStyle = {\n//     color: 'black', \n//     backgroundColor:'red'\n// }\n\n\nexport default Header\n","import {Link} from 'react-router-dom'\n\nconst Footer = () => {\n    return (\n        <footer>\n            <p>Copyright &copy; 2021</p>\n            <Link to='/about'>About</Link>\n        </footer>\n    )\n}\n\nexport default Footer\n","import { FaTimes } from 'react-icons/fa'\n\nconst Task = ({task,onDelete, onToggle}) => {\n    return (\n        <div \n            className={`task ${task.reminder ? \n            'reminder' : ''}`} \n            onDoubleClick={() => onToggle(task.id)}\n            >\n            <h3>\n                {task.text} <FaTimes style={{color:\n                'red', cursor: 'pointer'}} \n                onClick={() => onDelete(task.id)}/> \n            </h3>\n            <p>{task.day}</p>\n        </div>\n    )\n}\n\nexport default Task\n","import Task from './Task'\n\nconst Tasks = ({tasks, onDelete, onToggle}) => {\n\n    return (\n        <>\n            {tasks.map((task)=> (\n            <Task key={task.id} task ={task} \n            onDelete={onDelete} onToggle={onToggle}/>)\n            \n            )}\n        </>  \n    )\n}\n\nexport default Tasks\n","import { useState } from 'react'\n\n\nconst AddTask = ({onAdd}) => {\n    const [text, setText] = useState('')\n    const [day, setDay] = useState('')\n    const [reminder, setReminder] = useState(false)\n\n    const onSubmit = (e) => {\n        e.preventDefault()\n\n        if(!text) {\n            alert('Please add a task')\n            return\n        }\n\n        onAdd({text,day,reminder})\n\n        setText('')\n        setDay('')\n        setReminder(false)\n    }\n\n    return (\n        <form className='add-form' onSubmit = {onSubmit}>\n            <div className = 'form-control'>\n                <label>Task</label>\n                <input type='text' placeholder='Add Task' \n                value={text} \n                onChange={(e) => \n                setText(e.target.value)}\n                />\n            </div>\n            <div className = 'form-control'>\n                <label>Day & Time</label>\n                <input type='text' placeholder='Add Day & Time' \n                value={day} \n                onChange={(e) => \n                setDay(e.target.value)}\n                />\n            </div>\n            <div className = 'form-control form-control-check'>\n                <label>Set Reminder</label>\n                <input type='checkbox'\n                checked={reminder}\n                value={reminder} \n                onChange={(e) => \n                setReminder(e.currentTarget.checked)}/>\n            </div>\n\n            <input type='submit' value='Save Task' \n            className='btn btn-block' />\n        </form>\n        \n\n    )\n}\n\nexport default AddTask\n","import {Link} from 'react-router-dom'\n\nconst About = () => {\n    return (\n        <div>\n            <h4>Version 1.0.0</h4>\n            <Link to='/'> Go Back</Link>\n        </div>\n    )\n}\n\nexport default About\n","import {useState, useEffect} from 'react'\nimport {BrowserRouter as Router, Route} from 'react-router-dom'\nimport Header from './components/Header'\nimport Footer from './components/Footer'\nimport Tasks from './components/Tasks'\nimport AddTask from './components/AddTask'\nimport About from './components/About'\n\n\n\n\n\n\nfunction App() {\n  const [showAddTask, setShowAddTask] = useState(false)\n  const [tasks, setTasks] = useState([]) \n\n  useEffect(() => {\n    const getTasks = async () => {\n      const tasksFromServer = await fetchTasks()\n      setTasks(tasksFromServer)\n    }\n      getTasks()\n\n    }, []) //passing in empty array for dependencies\n\n//fetch single Task\nconst fetchTask = async (id) => {\n  const res = await fetch(`http://localhost:5000/tasks/${id}`)\n  const data = await res.json()\n\n  return data\n\n}\n\n\n//fetch the Tasks\nconst fetchTasks = async () => {\n  const res = await fetch('http://localhost:5000/tasks')\n  const data = await res.json()\n\n  return data\n\n}\n\n//Add Task\nconst addTask = async (task) => {\n  const res = await fetch('http://localhost:5000/tasks', {\n    method: 'POST',\n    headers: {\n      'Content-type': 'application/json'\n    },\n    body: JSON.stringify(task)\n  })\n\n  const data = await res.json()\n\n  setTasks([...tasks, data])\n\n  // const id = Math.floor(Math.random() * 10000)+1\n  // const newTask = {id, ...task}\n  // setTasks([...tasks, newTask])\n}\n\n// Delete Task\nconst deleteTask = async (id) => {\n  await fetch(`http://localhost:5000/tasks/${id}`, {\n    method: 'DELETE',\n  })\n\n  setTasks(tasks.filter((task) => task.id !== id))\n}\n\n//Toggle Reminder\nconst toggleReminder = async (id) => {\n  const taskToToggle = await fetchTask(id)\n  const updTask = {...taskToToggle, reminder: !taskToToggle.reminder}\n\n  const res = await fetch(`http://localhost:5000/tasks/${id}`, {\n    method: 'PUT',\n    headers:{\n      'Content-type':'application/json'\n    },\n    body: JSON.stringify(updTask)\n  })\n\n  const data = await res.json()\n\n  setTasks(tasks.map((task) => task.id === id ? \n  {...task, reminder:data.reminder} : task))\n}\n\nreturn (\n  <Router>\n    <div className='container'>\n      <Header onAdd={() => setShowAddTask\n        (!showAddTask)} showAdd={showAddTask}/>\n      \n      <Route path='/' exact render={(props) => (\n        <>\n          {showAddTask && <AddTask onAdd= {addTask}/>}\n\n          {tasks.length > 0 ? (<Tasks tasks={tasks} onDelete={deleteTask} onToggle={toggleReminder}/>) \n          : (\n            'No Tasks To Show'\n          ) }\n        </>\n      )} />\n      <Route path='/about' component={About} />\n      <Footer />\n    </div>\n  </Router>\n)\n}\n\n\n\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}